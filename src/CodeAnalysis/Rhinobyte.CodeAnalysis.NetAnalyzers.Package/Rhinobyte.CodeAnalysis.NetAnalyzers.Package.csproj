<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <RepoRoot>$(MSBuildThisFileDirectory)..\..\..\</RepoRoot>
        <IsPackable>true</IsPackable>

        <!-- VERSION VALUES -->
        <PackageId>Rhinobyte.CodeAnalysis.NetAnalyzers</PackageId>
        <PackageVersion>1.0.0.0-preview.6</PackageVersion>
        <Authors>Ryan Thomas</Authors>
        <Company>Rhinobyte Software</Company>
        <Copyright>Copyright Â© Ryan Thomas. All rights reserved.</Copyright>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <IncludeSymbols>false</IncludeSymbols>
        <NeutralLanguage>en-US</NeutralLanguage>
        <PackageIcon>Icon.png</PackageIcon>
        <PackageIconFullPath>$(RepoRoot)RhinobytePackageIcon.png</PackageIconFullPath>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
        <PackageLicenseFullPath>$(RepoRoot)LICENSE.txt</PackageLicenseFullPath>
        <PackageOutputPath>$(RepoRoot)build\$(Configuration)\</PackageOutputPath>
        <PackageProjectUrl>https://github.com/RhinobyteSoftware/dotnet-tools</PackageProjectUrl>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <RepositoryType>git</RepositoryType>
        <RepositoryUrl>https://github.com/RhinobyteSoftware/dotnet-tools</RepositoryUrl>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <!-- Dotnet Sourcelink Package Properties -->
        <!-- See https://github.com/dotnet/sourcelink/blob/main/docs/README.md -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>

        <Description>Rhinobyte.CodeAnalysis.NetAnalyzers</Description>
        <PackageReleaseNotes>
            v1.0.0.0-preview.6
            - Update analyzer for RBCS0001 to ignore a primary constructor when determining if member groups are ordered correctly
            - Fix bug that would result in a sequence contains no elements exception when the MembersOrderedCorrectlyAnalyzer was run on an enum type declaration
            - Add new rule RBCS0004: Order enum member names alphabetically
            - Add new rule RBCS0005: Order enum member values in ascending order
            
            v1.0.0.0-preview.5
            - Add new rule RBCS0010: Arguments for optional parameters should be passed explicitly by name

            v1.0.0-beta.4
            - Updated nuget package dependencies to latest versions
            - Resolved analyzer warnings for newer analyzer rules
            - Updated the MembersOrderedCorrectlyAnalyzerCodeFixProvider to use a class type in lieu of struct type for sort member key data to reduce possibility of a stack overflow exception in really big files

            v1.0.0-beta.3
            - Fixed the url used in the analzyer rule help links to point to the https://github.com/RhinobyteSoftware/dotnet-tools/blob/main/docs/codeanalysis/rules/ folder
            - Updated the README.md that is included in the package to include the list of rules from the AnalyzerReleases.Shipped.md file and to use absolute urls for the rule docs pointed at the github repo

            v1.0.0-beta.2
            - Updated the MembersOrderedCorrectly analyzer and code fix provider to support configuration via .EditorConfig properties
            - Added new rule RBCS0003: Member assignments in an object initializer are ordered correctly

            v1.0.0-beta.1
            - Added new MembersOrderedCorrectlyAnalyzer and MembersOrderedCorrectlyAnalyzerCodeFixProvider
            with rules RBCS0001: Type members should be ordered by group and RBCS0002: Type members within the same group should be ordered correctly
        </PackageReleaseNotes>
        <PackageTags>Rhinobyte.CodeAnalysis.NetAnalyzers, analyzers</PackageTags>
        <DevelopmentDependency>true</DevelopmentDependency>
        <NoPackageAnalysis>true</NoPackageAnalysis>

        <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_AddAnalyzersToOutput</TargetsForTfmSpecificContentInPackage>
        <GenerateNuspecDependsOn>_PrepareReadmeForNugetPackage; $(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\Rhinobyte.CodeAnalysis.NetAnalyzers\Rhinobyte.CodeAnalysis.NetAnalyzers.csproj" />
        <ProjectReference Include="..\Rhinobyte.CodeAnalysis.NetAnalyzers.CodeFixes\Rhinobyte.CodeAnalysis.NetAnalyzers.CodeFixes.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <None Include="$(RepoRoot)\LICENSE.txt" Pack="true" PackagePath="LICENSE.txt" />
        <None Include="$(RepoRoot)\RhinobytePackageIcon.png" Pack="true" PackagePath="Icon.png" />
        <None Include="$(MSBuildProjectDirectory)\README.package.md" Pack="true" PackagePath="README.md" />

        <None Update="tools\*.ps1" CopyToOutputDirectory="Always" Pack="true" PackagePath="" />
    </ItemGroup>

    <Target Name="_AddAnalyzersToOutput">
        <ItemGroup>
            <TfmSpecificPackageFile Include="$(OutputPath)\Rhinobyte.CodeAnalysis.NetAnalyzers.dll" PackagePath="analyzers/dotnet/cs" />
            <TfmSpecificPackageFile Include="$(OutputPath)\Rhinobyte.CodeAnalysis.NetAnalyzers.CodeFixes.dll" PackagePath="analyzers/dotnet/cs" />
        </ItemGroup>
    </Target>

    <Target Name="_PrepareReadmeForNugetPackage">
        <PropertyGroup>
            <ReadmeInputFile>$(MSBuildProjectDirectory)\README.md</ReadmeInputFile>
            <PackageReadmeContent>$([System.IO.File]::ReadAllText(`$(ReadmeInputFile)`))</PackageReadmeContent>

            <ShippedAnalyzersFilePath>$(MSBuildProjectDirectory)\..\Rhinobyte.CodeAnalysis.NetAnalyzers\AnalyzerReleases.Shipped.md</ShippedAnalyzersFilePath>
            <AnalyzersContent>$([System.IO.File]::ReadAllText(`$(ShippedAnalyzersFilePath)`))</AnalyzersContent>
            <AnalyzersContent>$(AnalyzersContent.Substring($(AnalyzersContent.IndexOf('## Release'))).Replace('## Release 1.0.0', `## Release $(PackageVersion)`).Replace('../../../docs', 'https://github.com/RhinobyteSoftware/dotnet-tools/blob/main/docs'))</AnalyzersContent>

            <PackageReadmeContent>$(PackageReadmeContent.Replace('[Shipped Analyzer Rules](../Rhinobyte.CodeAnalysis.NetAnalyzers/AnalyzerReleases.Shipped.md)', `$(AnalyzersContent)`))</PackageReadmeContent>
            <PackageReadmeOutputFile>$(MSBuildProjectDirectory)\README.package.md</PackageReadmeOutputFile>
        </PropertyGroup>

        <Message Importance="high" Text="&#xD;&#xA;Writing transformed readme content to: $(PackageReadmeOutputFile)&#xD;&#xA;&#xD;&#xA;PackageReadmeContent:&#xD;&#xA;&#xD;&#xA;$(PackageReadmeContent)" />

        <WriteLinesToFile File="$(PackageReadmeOutputFile)" Lines="$(PackageReadmeContent)" Overwrite="true" Encoding="UTF-8" />

    </Target>

</Project>
